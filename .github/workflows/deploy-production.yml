name: Deploy to Production

on:
  push:
    branches: [dev]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python -m unittest discover -s tests

      - name: Package event_processor Lambda
        run: |
          bash deployment/build_and_package.sh lambda_kinesis_to_dynamo event_processor.zip

      - name: Package dynamo_matcher Lambda
        run: |
          bash deployment/build_and_package.sh lambda_dynamo_matcher dynamo_matcher.zip

      - name: Package kpi_aggregator Lambda
        run: |
          bash deployment/build_and_package.sh glue_kpi_aggregator kpi_aggregator.zip

      - name: Update event_processor Lambda code
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          bash deployment/update_lambda_code.sh event-processor-fn event_processor.zip

      - name: Update dynamo_matcher Lambda code
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          bash deployment/update_lambda_code.sh dynamo-matcher-fn dynamo_matcher.zip

      - name: Update kpi_aggregator Lambda code
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          bash deployment/update_lambda_code.sh kpi-aggregator-fn kpi_aggregator.zip

      - name: Upload Glue job script and dependencies to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          # Upload main Glue script
          aws s3 cp src/glue_kpi_aggregator.py s3://aws-glue-assets-643303011741-us-east-1/scripts/glue_kpi_aggregator.py
          
          # Upload dependencies
          aws s3 cp src/config.py s3://aws-glue-assets-643303011741-us-east-1/scripts/config.py
          aws s3 cp src/utils.py s3://aws-glue-assets-643303011741-us-east-1/scripts/utils.py

      - name: Update Glue job with dependencies
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          # Get current job role
          CURRENT_ROLE=$(aws glue get-job --job-name nsp-bolt-kpi-aggregator --query 'Job.Role' --output text)
          
          # Update job with current role and new dependencies
          aws glue update-job \
            --job-name nsp-bolt-kpi-aggregator \
            --job-update '{
              "Role": "'$CURRENT_ROLE'",
              "Command": {
                "Name": "glueetl",
                "ScriptLocation": "s3://aws-glue-assets-643303011741-us-east-1/scripts/glue_kpi_aggregator.py",
                "PythonVersion": "3"
              },
              "DefaultArguments": {
                "--extra-py-files": "s3://aws-glue-assets-643303011741-us-east-1/scripts/config.py,s3://aws-glue-assets-643303011741-us-east-1/scripts/utils.py"
              }
            }'